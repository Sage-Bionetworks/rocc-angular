name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*.*.*'
  pull_request:

env:
  node_version: 14

jobs:
  configure:
    runs-on: ubuntu-latest
    steps:
    - name: Create configuration
      run: |
        VERSION=noop
        PUSH=false
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          PUSH=true
        fi
        printf "%s\n" \
          "version=${VERSION}" \
          "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
          "push=${PUSH}" | tee -a .github_env

    - name: Upload .github_env
      uses: actions/upload-artifact@v2
      with:
        name: GITHUB_ENV
        path: .github_env

  build:
    needs: [configure]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [12, 14]

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup node ${{ matrix.node }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgbm-dev

    - name: Install npm dependencies
      run: npm ci

    - run: npm run test:ci

    # - name: Prepare environment for coveralls
    #   run: |
    #     echo "NODE_ENV=$(echo node-${{ matrix.node }} | tr -d .)" >> $GITHUB_ENV

    # - name: Coveralls Parallel
    #   env:
    #     COVERALLS_FLAG_NAME: ${{ env.NODE_ENV }}
    #     COVERALLS_PARALLEL: true
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   run: npm run coverage

    - run: npm run build

  # finish-coveralls:
  #   needs: [test]
  #   runs-on: ubuntu-latest
  #   container: python:3-slim
  #   steps:
  #   - name: Finish Coveralls Parallel
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     run: |
  #       pip3 install --upgrade coveralls
  #       coveralls --finish

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Download .github_env
      uses: actions/download-artifact@v2
      with:
        name: GITHUB_ENV
        path: .

    - name: Restore $GITHUB_ENV
      run: cat .github_env >> $GITHUB_ENV

    - name: Setup node ${{ env.node_version }}
      if: env.push == 'true'
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.node_version }}
        registry-url: 'https://registry.npmjs.org'

    - name: Install npm dependencies
      if: env.push == 'true'
      run: npm ci

    - name: Build package
      if: env.push == 'true'
      run: npm run build

    - name: Push package to npmjs
      if: env.push == 'true'
      run: |
        cd dist/rocc-client
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
